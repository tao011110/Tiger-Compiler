-------====Parse=====-----
-------====Semantic analysis=====-----
defined function printdefined function nopdefined function bsearchdefined function bsearchdefined function initdefined function printidefined function bsearchdefined function printdefined function try-------====Escape analysis=====-----
-------====Translate=====-----

new frame name is tigermain

new frame offset is -8
get the offset -8
before name is tigermain

name is tigermain
begin int exp 16escape!!!now offset is -16ExExp UnExNxExp UnNxExExp UnNxExExp UnExbegin int exp 0ExExp UnExExExp UnExescape!!!now offset is -24ExExp UnExNxExp UnNx
new frame name is nop
escape!!!now offset is -16
new frame offset is -16

OK afer new level!
enter the function nop
we now find 
we now find nop

new frame name is init
escape!!!now offset is -16
new frame offset is -16

OK afer new level!
enter the function init
we now find 
we now find init

new frame name is bsearch
escape!!!now offset is -16framePtr is framePtr is framePtr is 
new frame offset is -16

OK afer new level!
enter the function bsearch
we now find 
we now find bsearch

new frame name is try
escape!!!now offset is -16
new frame offset is -16

OK afer new level!
enter the function try
we now find 
we now find try
callexp print
begin string exp 
begin string exp 
ExExp UnEx
outer most  print
external print
ExExp UnEx
 begin procEntryExit1
parse stmend procEntryExit1
ExExp UnNxExExp UnEx
prog name is nop
begin int exp 0begin int exp 1ExExp UnExExExp UnExExExp UnExExExp UnExExExp UnExExExp UnExbegin int exp 2ExExp UnExExExp UnExbegin int exp 1ExExp UnExExExp UnExExExp UnExExExp UnExNxExp UnExcallexp nop
ExExp UnNxExExp UnExExExp UnExframePtr is ExExp UnExExExp UnExExExp UnNxExExp UnExExExp UnExNxExp UnEx
 begin procEntryExit1
parse stmend procEntryExit1
NxExp UnNx
prog name is init
ExExp UnExExExp UnExExExp UnExExExp UnExbegin int exp 2ExExp UnExExExp UnExframePtr is ExExp UnExNxExp UnNxExExp UnExExExp UnExExExp UnExExExp UnExExExp UnExExExp UnExcallexp bsearch
begin int exp 1ExExp UnExExExp UnExbegin int exp 1ExExp UnExExExp UnExExExp UnExExExp UnExExExp UnExcallexp bsearch
ExExp UnExExExp UnExExExp UnExCxExp UnCxCxExp UnCxCxExp UnCxExExp UnExExExp UnExExExp UnExExExp UnExCxExp UnCxCxExp UnCxCxExp UnCxExExp UnExExExp UnExExExp UnEx
 begin procEntryExit1
parse stmparse stmparse stmparse stmend procEntryExit1
ExExp UnNxExExp UnEx
prog name is bsearch
callexp init
ExExp UnExcallexp printi
callexp bsearch
begin int exp 0begin int exp 0ExExp UnExbegin int exp 1ExExp UnExExExp UnExbegin int exp 1ExExp UnExExExp UnExExExp UnExbegin int exp 7begin int exp 7ExExp UnExcallexp bsearch
begin int exp 0begin int exp 0ExExp UnExbegin int exp 1ExExp UnExExExp UnExbegin int exp 1ExExp UnExExExp UnExExExp UnExbegin int exp 7begin int exp 7ExExp UnExExExp UnEx
outer most  printi
external printi
ExExp UnNxExExp UnExExExp UnExcallexp print
begin string exp 

begin string exp 

ExExp UnEx
outer most  print
external print
ExExp UnNxExExp UnExExExp UnExExExp UnEx
 begin procEntryExit1
parse stmend procEntryExit1
ExExp UnNxExExp UnEx
prog name is try
ExExp UnNxExExp UnExcallexp try
ExExp UnExExExp UnExExExp UnEx
 begin procEntryExit1
end procEntryExit1

prog name is tigermain
-------====IR tree=====-----
 EXP(
  CALL(
   NAME print,
    NAME ))
-------====Canonicalize=====-----
-------====Linearlize=====-----
 EXP(
  CALL(
   NAME print,
    NAME ))
------====Basic block_=====-------
 LABEL L14
 EXP(
  CALL(
   NAME print,
    NAME ))
 JUMP(
  NAME L13)
-------====Trace=====-----
 LABEL L14
 EXP(
  CALL(
   NAME print,
    NAME ))
 JUMP(
  NAME L13)
 LABEL L13
-------====Code generate=====-----
movq %rbx, t123
movq %rbp, t124
movq %r12, t125
movq %r13, t126
movq %r14, t127
movq %r15, t128
L14:
leaq (%rip), t131
movq t131, %rdi
call print
movq %rax, t129
jmp L13
L13:
movq t123, %rbx
movq t124, %rbp
movq t125, %r12
movq t126, %r13
movq t127, %r14
movq t128, %r15


-------====Output assembly for nop=====-----
-------====IR tree=====-----
 SEQ(
  MOVE(
   temp t119,
   CONST 0),
  SEQ(
   CJUMP(LE,
    temp t119,
    BINOP(MINUS,
     MEM(
      BINOP(MINUS,
       temp %rbp,
       CONST 8)),
     CONST 1),
    L1,L2),
   SEQ(
    LABEL L1,
    SEQ(
     EXP(
      ESEQ(
       EXP(
        ESEQ(
         MOVE(
          MEM(
           BINOP(PLUS,
            MEM(
             BINOP(MINUS,
              temp %rbp,
              CONST 8)),
            BINOP(TIMES,
             temp %rbp,
             CONST 8))),
          BINOP(PLUS,
           BINOP(TIMES,
            temp %rbp,
            CONST 2),
           CONST 1)),
         CONST 0)),
       CALL(
        NAME nop,
         temp %rbp))),
     SEQ(
      CJUMP(LT,
       temp t119,
       BINOP(MINUS,
        MEM(
         BINOP(MINUS,
          temp %rbp,
          CONST 8)),
        CONST 1),
       L0,L2),
      SEQ(
       LABEL L0,
       SEQ(
        MOVE(
         temp t119,
         BINOP(PLUS,
          temp t119,
          CONST 1)),
        SEQ(
         JUMP(
          NAME L1),
         LABEL L2))))))))
-------====Canonicalize=====-----
-------====Linearlize=====-----
 MOVE(
  temp t119,
  CONST 0)
 CJUMP(LE,
  temp t119,
  BINOP(MINUS,
   MEM(
    BINOP(MINUS,
     temp %rbp,
     CONST 8)),
   CONST 1),
  L1,L2)
 LABEL L1
 MOVE(
  MEM(
   BINOP(PLUS,
    MEM(
     BINOP(MINUS,
      temp %rbp,
      CONST 8)),
    BINOP(TIMES,
     temp %rbp,
     CONST 8))),
  BINOP(PLUS,
   BINOP(TIMES,
    temp %rbp,
    CONST 2),
   CONST 1))
 EXP(
  CALL(
   NAME nop,
    temp %rbp))
 CJUMP(LT,
  temp t119,
  BINOP(MINUS,
   MEM(
    BINOP(MINUS,
     temp %rbp,
     CONST 8)),
   CONST 1),
  L0,L2)
 LABEL L0
 MOVE(
  temp t119,
  BINOP(PLUS,
   temp t119,
   CONST 1))
 JUMP(
  NAME L1)
 LABEL L2
------====Basic block_=====-------
 LABEL L16
 MOVE(
  temp t119,
  CONST 0)
 CJUMP(LE,
  temp t119,
  BINOP(MINUS,
   MEM(
    BINOP(MINUS,
     temp %rbp,
     CONST 8)),
   CONST 1),
  L1,L2)
 LABEL L1
 MOVE(
  MEM(
   BINOP(PLUS,
    MEM(
     BINOP(MINUS,
      temp %rbp,
      CONST 8)),
    BINOP(TIMES,
     temp %rbp,
     CONST 8))),
  BINOP(PLUS,
   BINOP(TIMES,
    temp %rbp,
    CONST 2),
   CONST 1))
 EXP(
  CALL(
   NAME nop,
    temp %rbp))
 CJUMP(LT,
  temp t119,
  BINOP(MINUS,
   MEM(
    BINOP(MINUS,
     temp %rbp,
     CONST 8)),
   CONST 1),
  L0,L2)
 LABEL L0
 MOVE(
  temp t119,
  BINOP(PLUS,
   temp t119,
   CONST 1))
 JUMP(
  NAME L1)
 LABEL L2
 JUMP(
  NAME L15)
-------====Trace=====-----
 LABEL L16
 MOVE(
  temp t119,
  CONST 0)
 CJUMP(LE,
  temp t119,
  BINOP(MINUS,
   MEM(
    BINOP(MINUS,
     temp %rbp,
     CONST 8)),
   CONST 1),
  L1,L2)
 LABEL L2
 JUMP(
  NAME L15)
 LABEL L1
 MOVE(
  MEM(
   BINOP(PLUS,
    MEM(
     BINOP(MINUS,
      temp %rbp,
      CONST 8)),
    BINOP(TIMES,
     temp %rbp,
     CONST 8))),
  BINOP(PLUS,
   BINOP(TIMES,
    temp %rbp,
    CONST 2),
   CONST 1))
 EXP(
  CALL(
   NAME nop,
    temp %rbp))
 CJUMP(GE,
  temp t119,
  BINOP(MINUS,
   MEM(
    BINOP(MINUS,
     temp %rbp,
     CONST 8)),
   CONST 1),
  L2,L0)
 LABEL L0
 MOVE(
  temp t119,
  BINOP(PLUS,
   temp t119,
   CONST 1))
 JUMP(
  NAME L1)
 LABEL L15
-------====Code generate=====-----
movq %rbx, t132
movq %rbp, t133
movq %r12, t134
movq %r13, t135
movq %r14, t136
movq %r15, t137
L16:
movq $0, t138
movq t138, t119
leaq init_framesize(%rsp), t142
movq $8, t143
movq t142, t141
subq t143, t141
movq (t141), t140
movq $1, t144
movq t140, t139
subq t144, t139
cmpq t139, t119
jle L1
L2:
jmp L15
L1:
leaq init_framesize(%rsp), t147
movq $2, t148
movq t147, %rax
cqto
imulq t148
movq %rax, t146
movq $1, t149
movq t146, t145
addq t149, t145
leaq init_framesize(%rsp), t153
movq $8, t154
movq t153, t152
subq t154, t152
movq (t152), t151
leaq init_framesize(%rsp), t156
movq $8, t157
movq t156, %rax
cqto
imulq t157
movq %rax, t155
movq t151, t150
addq t155, t150
movq t145, (t150)
leaq init_framesize(%rsp), t160
movq t160, %rdi
call nop
movq %rax, t158
leaq init_framesize(%rsp), t164
movq $8, t165
movq t164, t163
subq t165, t163
movq (t163), t162
movq $1, t166
movq t162, t161
subq t166, t161
cmpq t161, t119
jge L2
L0:
movq $1, t168
movq t119, t167
addq t168, t167
movq t167, t119
jmp L1
L15:
movq t132, %rbx
movq t133, %rbp
movq t134, %r12
movq t135, %r13
movq t136, %r14
movq t137, %r15


-------====Output assembly for init=====-----
-------====IR tree=====-----
 EXP(
  ESEQ(
   CJUMP(EQ,
    temp %rbp,
    temp %rbp,
    L10,L11),
   ESEQ(
    LABEL L10,
    ESEQ(
     MOVE(
      temp t122,
      temp %rbp),
     ESEQ(
      JUMP(
       NAME L12),
      ESEQ(
       LABEL L11,
       ESEQ(
        MOVE(
         temp t122,
         ESEQ(
          MOVE(
           temp t120,
           BINOP(DIVIDE,
            BINOP(PLUS,
             temp %rbp,
             temp %rbp),
            CONST 2)),
          ESEQ(
           CJUMP(LT,
            MEM(
             BINOP(PLUS,
              MEM(
               BINOP(MINUS,
                temp %rbp,
                CONST 8)),
              BINOP(TIMES,
               temp %rbp,
               CONST 8))),
            temp %rbp,
            L7,L8),
           ESEQ(
            LABEL L7,
            ESEQ(
             MOVE(
              temp t121,
              CALL(
               NAME bsearch,
                temp %rbp,
                BINOP(PLUS,
                 temp %rbp,
                 CONST 1),
                temp %rbp,
                temp %rbp)),
             ESEQ(
              JUMP(
               NAME L9),
              ESEQ(
               LABEL L8,
               ESEQ(
                MOVE(
                 temp t121,
                 CALL(
                  NAME bsearch,
                   temp %rbp,
                   temp %rbp,
                   temp %rbp,
                   temp %rbp)),
                ESEQ(
                 JUMP(
                  NAME L9),
                 ESEQ(
                  LABEL L9,
                  temp t121)))))))))),
        ESEQ(
         JUMP(
          NAME L12),
         ESEQ(
          LABEL L12,
          temp t122)))))))))
-------====Canonicalize=====-----
-------====Linearlize=====-----
 CJUMP(EQ,
  temp %rbp,
  temp %rbp,
  L10,L11)
 LABEL L10
 MOVE(
  temp t122,
  temp %rbp)
 JUMP(
  NAME L12)
 LABEL L11
 MOVE(
  temp t120,
  BINOP(DIVIDE,
   BINOP(PLUS,
    temp %rbp,
    temp %rbp),
   CONST 2))
 CJUMP(LT,
  MEM(
   BINOP(PLUS,
    MEM(
     BINOP(MINUS,
      temp %rbp,
      CONST 8)),
    BINOP(TIMES,
     temp %rbp,
     CONST 8))),
  temp %rbp,
  L7,L8)
 LABEL L7
 MOVE(
  temp t121,
  CALL(
   NAME bsearch,
    temp %rbp,
    BINOP(PLUS,
     temp %rbp,
     CONST 1),
    temp %rbp,
    temp %rbp))
 JUMP(
  NAME L9)
 LABEL L8
 MOVE(
  temp t121,
  CALL(
   NAME bsearch,
    temp %rbp,
    temp %rbp,
    temp %rbp,
    temp %rbp))
 JUMP(
  NAME L9)
 LABEL L9
 MOVE(
  temp t122,
  temp t121)
 JUMP(
  NAME L12)
 LABEL L12
 EXP(
  temp t122)
------====Basic block_=====-------
 LABEL L18
 CJUMP(EQ,
  temp %rbp,
  temp %rbp,
  L10,L11)
 LABEL L10
 MOVE(
  temp t122,
  temp %rbp)
 JUMP(
  NAME L12)
 LABEL L11
 MOVE(
  temp t120,
  BINOP(DIVIDE,
   BINOP(PLUS,
    temp %rbp,
    temp %rbp),
   CONST 2))
 CJUMP(LT,
  MEM(
   BINOP(PLUS,
    MEM(
     BINOP(MINUS,
      temp %rbp,
      CONST 8)),
    BINOP(TIMES,
     temp %rbp,
     CONST 8))),
  temp %rbp,
  L7,L8)
 LABEL L7
 MOVE(
  temp t121,
  CALL(
   NAME bsearch,
    temp %rbp,
    BINOP(PLUS,
     temp %rbp,
     CONST 1),
    temp %rbp,
    temp %rbp))
 JUMP(
  NAME L9)
 LABEL L8
 MOVE(
  temp t121,
  CALL(
   NAME bsearch,
    temp %rbp,
    temp %rbp,
    temp %rbp,
    temp %rbp))
 JUMP(
  NAME L9)
 LABEL L9
 MOVE(
  temp t122,
  temp t121)
 JUMP(
  NAME L12)
 LABEL L12
 EXP(
  temp t122)
 JUMP(
  NAME L17)
-------====Trace=====-----
 LABEL L18
 CJUMP(EQ,
  temp %rbp,
  temp %rbp,
  L10,L11)
 LABEL L11
 MOVE(
  temp t120,
  BINOP(DIVIDE,
   BINOP(PLUS,
    temp %rbp,
    temp %rbp),
   CONST 2))
 CJUMP(LT,
  MEM(
   BINOP(PLUS,
    MEM(
     BINOP(MINUS,
      temp %rbp,
      CONST 8)),
    BINOP(TIMES,
     temp %rbp,
     CONST 8))),
  temp %rbp,
  L7,L8)
 LABEL L8
 MOVE(
  temp t121,
  CALL(
   NAME bsearch,
    temp %rbp,
    temp %rbp,
    temp %rbp,
    temp %rbp))
 LABEL L9
 MOVE(
  temp t122,
  temp t121)
 LABEL L12
 EXP(
  temp t122)
 JUMP(
  NAME L17)
 LABEL L10
 MOVE(
  temp t122,
  temp %rbp)
 JUMP(
  NAME L12)
 LABEL L7
 MOVE(
  temp t121,
  CALL(
   NAME bsearch,
    temp %rbp,
    BINOP(PLUS,
     temp %rbp,
     CONST 1),
    temp %rbp,
    temp %rbp))
 JUMP(
  NAME L9)
 LABEL L17
-------====Code generate=====-----
movq %rbx, t169
movq %rbp, t170
movq %r12, t171
movq %r13, t172
movq %r14, t173
movq %r15, t174
L18:
leaq bsearch_framesize(%rsp), t175
leaq bsearch_framesize(%rsp), t176
cmpq t176, t175
je L10
L11:
leaq bsearch_framesize(%rsp), t179
leaq bsearch_framesize(%rsp), t180
movq t179, t178
addq t180, t178
movq $2, t181
movq t178, %rax
cqto
idivq t181
movq %rax, t177
movq t177, t120
leaq bsearch_framesize(%rsp), t186
movq $8, t187
movq t186, t185
subq t187, t185
movq (t185), t184
leaq bsearch_framesize(%rsp), t189
movq $8, t190
movq t189, %rax
cqto
imulq t190
movq %rax, t188
movq t184, t183
addq t188, t183
movq (t183), t182
leaq bsearch_framesize(%rsp), t191
cmpq t191, t182
jl L7
L8:
leaq bsearch_framesize(%rsp), t194
movq t194, %rdi
leaq bsearch_framesize(%rsp), t195
movq t195, %rsi
leaq bsearch_framesize(%rsp), t196
movq t196, %rdx
leaq bsearch_framesize(%rsp), t197
movq t197, %rcx
call bsearch
movq %rax, t192
movq t192, t121
L9:
movq t121, t122
L12:
jmp L17
L10:
leaq bsearch_framesize(%rsp), t198
movq t198, t122
jmp L12
L7:
leaq bsearch_framesize(%rsp), t201
movq t201, %rdi
leaq bsearch_framesize(%rsp), t203
movq $1, t204
movq t203, t202
addq t204, t202
movq t202, %rsi
leaq bsearch_framesize(%rsp), t205
movq t205, %rdx
leaq bsearch_framesize(%rsp), t206
movq t206, %rcx
call bsearch
movq %rax, t199
movq t199, t121
jmp L9
L17:
movq t169, %rbx
movq t170, %rbp
movq t171, %r12
movq t172, %r13
movq t173, %r14
movq t174, %r15


-------====Output assembly for bsearch=====-----
-------====IR tree=====-----
 EXP(
  ESEQ(
   EXP(
    ESEQ(
     EXP(
      CALL(
       NAME init,
        temp %rbp)),
     CALL(
      NAME printi,
       CALL(
        NAME bsearch,
         temp %rbp,
         CONST 0,
         BINOP(MINUS,
          MEM(
           BINOP(MINUS,
            temp %rbp,
            CONST 8)),
          CONST 1),
         CONST 7)))),
   CALL(
    NAME print,
     NAME 
)))
-------====Canonicalize=====-----
-------====Linearlize=====-----
 EXP(
  CALL(
   NAME init,
    temp %rbp))
 MOVE(
  temp t207,
  CALL(
   NAME bsearch,
    temp %rbp,
    CONST 0,
    BINOP(MINUS,
     MEM(
      BINOP(MINUS,
       temp %rbp,
       CONST 8)),
     CONST 1),
    CONST 7))
 EXP(
  CALL(
   NAME printi,
    temp t207))
 EXP(
  CALL(
   NAME print,
    NAME 
))
------====Basic block_=====-------
 LABEL L20
 EXP(
  CALL(
   NAME init,
    temp %rbp))
 MOVE(
  temp t207,
  CALL(
   NAME bsearch,
    temp %rbp,
    CONST 0,
    BINOP(MINUS,
     MEM(
      BINOP(MINUS,
       temp %rbp,
       CONST 8)),
     CONST 1),
    CONST 7))
 EXP(
  CALL(
   NAME printi,
    temp t207))
 EXP(
  CALL(
   NAME print,
    NAME 
))
 JUMP(
  NAME L19)
-------====Trace=====-----
 LABEL L20
 EXP(
  CALL(
   NAME init,
    temp %rbp))
 MOVE(
  temp t207,
  CALL(
   NAME bsearch,
    temp %rbp,
    CONST 0,
    BINOP(MINUS,
     MEM(
      BINOP(MINUS,
       temp %rbp,
       CONST 8)),
     CONST 1),
    CONST 7))
 EXP(
  CALL(
   NAME printi,
    temp t207))
 EXP(
  CALL(
   NAME print,
    NAME 
))
 JUMP(
  NAME L19)
 LABEL L19
-------====Code generate=====-----
movq %rbx, t208
movq %rbp, t209
movq %r12, t210
movq %r13, t211
movq %r14, t212
movq %r15, t213
L20:
leaq try_framesize(%rsp), t216
movq t216, %rdi
call init
movq %rax, t214
leaq try_framesize(%rsp), t219
movq t219, %rdi
movq $0, t220
movq t220, %rsi
leaq try_framesize(%rsp), t224
movq $8, t225
movq t224, t223
subq t225, t223
movq (t223), t222
movq $1, t226
movq t222, t221
subq t226, t221
movq t221, %rdx
movq $7, t227
movq t227, %rcx
call bsearch
movq %rax, t217
movq t217, t207
movq t207, %rdi
call printi
movq %rax, t228
leaq (%rip), t232
movq t232, %rdi
call print
movq %rax, t230
jmp L19
L19:
movq t208, %rbx
movq t209, %rbp
movq t210, %r12
movq t211, %r13
movq t212, %r14
movq t213, %r15


-------====Output assembly for try=====-----
-------====IR tree=====-----
 MOVE(
  temp %rax,
  ESEQ(
   SEQ(
    SEQ(
     SEQ(
      MOVE(
       MEM(
        BINOP(PLUS,
         temp %rbp,
         CONST -16)),
       CONST 16),
      EXP(
       CONST 0)),
     MOVE(
      MEM(
       BINOP(PLUS,
        temp %rbp,
        CONST -24)),
      CALL(
       NAME init_array,
        temp %rbp,
        CONST 0))),
    EXP(
     CONST 0)),
   CALL(
    NAME try,
     temp %rbp)))
-------====Canonicalize=====-----
-------====Linearlize=====-----
 MOVE(
  MEM(
   BINOP(PLUS,
    temp %rbp,
    CONST -16)),
  CONST 16)
 MOVE(
  temp t234,
  BINOP(PLUS,
   temp %rbp,
   CONST -24))
 MOVE(
  temp t233,
  CALL(
   NAME init_array,
    temp %rbp,
    CONST 0))
 MOVE(
  MEM(
   temp t234),
  temp t233)
 MOVE(
  temp %rax,
  CALL(
   NAME try,
    temp %rbp))
------====Basic block_=====-------
 LABEL L22
 MOVE(
  MEM(
   BINOP(PLUS,
    temp %rbp,
    CONST -16)),
  CONST 16)
 MOVE(
  temp t234,
  BINOP(PLUS,
   temp %rbp,
   CONST -24))
 MOVE(
  temp t233,
  CALL(
   NAME init_array,
    temp %rbp,
    CONST 0))
 MOVE(
  MEM(
   temp t234),
  temp t233)
 MOVE(
  temp %rax,
  CALL(
   NAME try,
    temp %rbp))
 JUMP(
  NAME L21)
-------====Trace=====-----
 LABEL L22
 MOVE(
  MEM(
   BINOP(PLUS,
    temp %rbp,
    CONST -16)),
  CONST 16)
 MOVE(
  temp t234,
  BINOP(PLUS,
   temp %rbp,
   CONST -24))
 MOVE(
  temp t233,
  CALL(
   NAME init_array,
    temp %rbp,
    CONST 0))
 MOVE(
  MEM(
   temp t234),
  temp t233)
 MOVE(
  temp %rax,
  CALL(
   NAME try,
    temp %rbp))
 JUMP(
  NAME L21)
 LABEL L21
-------====Code generate=====-----
movq %rbx, t235
movq %rbp, t236
movq %r12, t237
movq %r13, t238
movq %r14, t239
movq %r15, t240
L22:
movq $16, t241
leaq tigermain_framesize(%rsp), t243
movq $-16, t244
movq t243, t242
addq t244, t242
movq t241, (t242)
leaq tigermain_framesize(%rsp), t246
movq $-24, t247
movq t246, t245
addq t247, t245
movq t245, t234
leaq tigermain_framesize(%rsp), t250
movq t250, %rdi
movq $0, t251
movq t251, %rsi
call init_array
movq %rax, t248
movq t248, t233
movq t233, (t234)
leaq tigermain_framesize(%rsp), t254
movq t254, %rdi
call try
movq %rax, t252
movq t252, %rax
jmp L21
L21:
movq t235, %rbx
movq t236, %rbp
movq t237, %r12
movq t238, %r13
movq t239, %r14
movq t240, %r15


-------====Output assembly for tigermain=====-----
